;ORG 0000H 
;LJMP MAIN
;MAIN: 
;SETUP:
;	MOV TMOD, #20H 
;	MOV TH1, #0FDH 
;	MOV SCON, #50H 
;	SETB TR1 
;LOOP: 
;	MOV A, #"1" 
;	CALL TRUYEN 
;	MOV A, #"+" 
;	CALL TRUYEN 
;	MOV A, #"1" 
;	CALL TRUYEN 
;	MOV A, #"="
;	CALL TRUYEN 
;	MOV A, #"2"
;	CALL TRUYEN
;JMP $
;TRUYEN: 
;	MOV SBUF, A 
;	JNB TI, $ 
;	CLR TI
;RET

;END
;CALCULATOR 8 BIT
;R1 STORE FIRST NUM
;R2 STORE OPETATOR
;R3 STORE SECOND NUM
ORG 00H 
ORG 0030H 
MAIN:
SETUP:
;	SECONDNUM EQU P2.7 ; P2.7 IS HIGH WHEN WRITING SECOND NUMBER
;	SECONDDIGIT EQU P2.6; P2.6 IS LOW WHEN WRITING FIRST DIGIT OF A NUMBER
;	MOV R4, #00H
;	MOV R3, #00H
;	MOV R2, #00H
;	MOV R1, #00H
	MOV TMOD, #21H 
	MOV TH1, #0FDH 
	MOV SCON, #50H 
	SETB TR1
LOOP:
	MOV 90H,#00 
	MOV A,P3 
	ANL A,#11110000b 
	CJNE A,#11110000b ,LOOP 

CHONGDOI:
 LCALL DELAY1MS 
 MOV A,P3
 ANL A,#11110000b 
 CJNE A,#11110000b,DUOCNHAN 
 SJMP CHONGDOI
DUOCNHAN:
 LCALL DELAY1MS 
 MOV A,P3
 ANL A,#11110000b 
 CJNE A,#11110000b,KIEMTRACOT 

 SJMP CHONGDOI 

KIEMTRACOT:
 MOV 90H,#0FEH 

 MOV A,P3

 ANL A,#11110000b 

 CJNE A,#11110000b ,SCAN_R0

 MOV 90H,#0FDH 

 MOV A,P3
 ANL A,#11110000b 
 CJNE A,#11110000b ,SCAN_R1
 MOV 90H,#0FBH
 MOV A,P3
 ANL A,#11110000b 
 CJNE A,#11110000b ,SCAN_R2
 MOV 90H,#0F7H
 MOV A,P3
 ANL A,#11110000b 
 CJNE A,#11110000b ,SCAN_R3
LJMP CHONGDOI 

SCAN_R0:
	MOV DPTR,#MAHANG0 

	LCALL SCAN 
LJMP MAIN 
SCAN_R1:
	MOV DPTR,#MAHANG1
	LCALL SCAN 
LJMP MAIN
SCAN_R2:
	MOV DPTR,#MAHANG2
	LCALL SCAN 
LJMP MAIN
SCAN_R3:
	 MOV DPTR,#MAHANG3
	 LCALL SCAN
LJMP MAIN
SCAN:
	 RLC A 
	 JNC MATCH 

	 INC DPTR 
SJMP SCAN
MATCH:
	 MOV A,#0
	 MOVC A,@A+DPTR
	 MOV R0, A
	 CALL TRUYEN
RET
STORE_NUM1:
	JB SECONDNUM, STORE_NUM2
	JB SECONDDIGIT, STORE_SECONDDIGIT_NUM1
	MOV A, R0
	SUBB A, #30H
	MOV R1, A
	SETB SECONDDIGIT
RET
STORE_SECONDDIGIT_NUM1:
	MOV A, R0
	MOV B, 10D
	SUBB A, #30H
	MOV R7, A
	MOV A, R1
	MUL AB
	MOV R6, B
	CJNE R6, #00H, OVERFLOW
	ADD A, R7
	JC OVERFLOW
	MOV R1, A
	SETB SECONDDIGIT
RET
STORE_NUM2:
	JB SECONDDIGIT, STORE_SECONDDIGIT_NUM2
	MOV A, R0
	SUBB A, #30H
	MOV R3, A
	SETB SECONDDIGIT
RET
STORE_SECONDDIGIT_NUM2:
	MOV A, R0
	MOV B, #10D
	SUBB A, #30H
	MOV R7, A
	MOV A, R3
	MUL AB
	MOV R6, B
	CJNE R6, #00H, OVERFLOW
	ADD A, R7
	JC OVERFLOW
	MOV R3, A
	SETB SECONDDIGIT
RET
	
TRUYEN: 
	MOV SBUF, R0 
	JNB TI, $ 
	CLR TI
RET

DELAY1MS:
	MOV TH0, #0FCH
	MOV TL0, #67H
	SETB TR0
	JNB TF0, $
	CLR TF0
	CLR TR0
RET

ORG 300H 
MAHANG0: DB '7','8','9','/'
MAHANG1: DB '4','5','6','X'
MAHANG2: DB '1','2','3','-'
MAHANG3: DB 'C','0','=','+'
END
